@inherits LayoutComponentBase

@inject ITokenService TokenService

<MudThemeProvider Theme="@theme" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar>
        @if (IsAuthenticated)
        {
            <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        }
        <h1 class="ml-3">L-Sharp</h1>
        <MudSpacer />
        <MudButton Variant="Variant.Filled" Href="/registration" class="mr-5" Color="Color.Primary" >Регистрация</MudButton>
        <MudButton Variant="Variant.Filled" Href="/login" Color="Color.Secondary">Вход в систему</MudButton>
    </MudAppBar>
    <MudDrawer @bind-Open="@drawerOpen">
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        <MudContainer class="mt-6" MaxWidth="MaxWidth.Large">
            <CascadingValue Value="this">
                @Body
            </CascadingValue>
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    bool drawerOpen = false;

    private bool IsAuthenticated { get; set; }

    MudTheme theme = new MudTheme
    {
        Palette = new PaletteLight
        {
            Primary = "#462255",
            AppbarBackground = "#FFFFFF",
            AppbarText = "#000000",
            Secondary = "#297373"
        }
    };

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        IsAuthenticated = await TokenService.HasToken();
        StateHasChanged();
    }

    public void SwitchAuth()
    {
        IsAuthenticated = !IsAuthenticated;
        Console.WriteLine("SWITCH");
        StateHasChanged();
    }

    void DrawerToggle()
    {
        drawerOpen = !drawerOpen;
    }
}